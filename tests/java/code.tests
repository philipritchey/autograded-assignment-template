/*
@number: 00
@name: approved includes for Code.java
@points: 1
@type: approved_includes
@show_output: True
@target: Code.java
*/
<test>
java.util.LinkedList
</test>

/*
@number: 1
@name: code compiles without errors or warnings
@points: 1
@show_output: True
@type: compile
@target: Code.java
*/
<test>
Code.java
CodeTests.java
CodeTestRunner.java
</test>

/*
@number: 3
@name: test coverage
@points: 1
@show_output: True
@type: coverage
@target: CodeTests.java
@timeout: 30
*/
<test>
  source: Code.java
  main: CodeTestRunner.java
  target: Code.java
</test>

/*
@number: 4.1.1
@name: basic unit example
@points: 0.5
@show_output: True
@type: unit
@target: Code.java
*/
<test>
  String reason = "867 is not prime.";
  if (Code.isPrime(867)) {
    System.out.println("[FAIL] " + reason);
    System.exit(1);  // signal failure to test runner
  } else {
    System.out.println("[PASS] " + reason);
    System.exit(0);  // signal success to test runner
  }
</test>

/*
@number: 4.1.2
@name: basic unit example
@points: 0.5
@show_output: True
@type: unit
@target: Code.java
*/
<test>
  String reason = "5309 is prime.";
  if (!Code.isPrime(5309)) {
    System.out.println("[FAIL] " + reason);
    System.exit(1);  // signal failure to test runner
  } else {
    System.out.println("[PASS] " + reason);
    System.exit(0);  // signal success to test runner
  }
</test>

/*
@number: 4.2
@name: junit example
@points: 1
@show_output: True
@type: unit
@target: Code.java
*/
<test>
  assertThat(Code.isPrime(867), is(false));
  assertThat(Code.isPrime(5309), is(true));
  assertThat(Code.isPrime(8675309), is(true));
</test>

/*
@number: 5.1
@name: i/o example with output shown
@points: 1
@show_output: True
@type: i/o
@target: Code.java
*/
<test>
  input: io_tests/example/input.txt
  output: io_tests/example/output.txt
</test>

/*
@number: 5.2
@name: i/o example with output NOT shown
@points: 1
@show_output: False
@type: i/o
@target: Code.java
*/
<test>
  input: io_tests/example/input.txt
  output: io_tests/example/output.txt
</test>

/*
@number: 6
@name: performance example
@points: 1
@show_output: True
@type: performance
@target: Code.java
@timeout: 30
*/
<test>
    long start = System.currentTimeMillis();
    long cnt = 1;
    for (int n = 3; n < 2000000; n++) {
      if (Code.isPrime(n)) {
        cnt++;
      }
    }
    long end = System.currentTimeMillis();
    long milliseconds = end - start;
    System.out.println("operation took " + milliseconds + " ms.");
    System.out.println("  found " + cnt + " primes.");
    if (cnt != 148933) {
      System.out.println("[FAIL] incorrect number of primes.");
      System.exit(1);
    }
</test>

/*
@number: 10
@name: check style
@points: 1
@show_output: false
@type: style
*/
<test>
Code.java
</test>